#include <stdio.h>
#include <string.h>

#define MAX_LEN 1000

// 스택 구조체 정의
typedef struct {
    char data[MAX_LEN];
    int top;
} Stack;

// 스택 초기화
void init(Stack* s) {
    s->top = -1;
}

// 스택이 비었는지 확인
int is_empty(Stack* s) {
    return s->top == -1;
}

// 스택에 요소 추가
void push(Stack* s, char ch) {
    if (s->top < MAX_LEN - 1) {
        s->data[++(s->top)] = ch;
    }
}

// 스택에서 요소 제거 및 반환
char pop(Stack* s) {
    if (!is_empty(s)) {
        return s->data[(s->top)--];
    }
    return '\0';
}

// 스택의 최상위 요소 반환
char peek(Stack* s) {
    if (!is_empty(s)) {
        return s->data[s->top];
    }
    return '\0';
}

// 괄호 짝 검사
int is_matching_pair(char open, char close) {
    return (open == '(' && close == ')') ||
        (open == '[' && close == ']');
}

// 올바른 괄호 문자열인지 검사
int is_valid_brackets(const char* str) {
    Stack stack;
    init(&stack);

    for (int i = 0; str[i] != '\0'; i++) {
        char ch = str[i];
        if (ch == '(' || ch == '[') {
            push(&stack, ch);
        }
        else if (ch == ')' || ch == ']') {
            if (is_empty(&stack)) return 0;
            char top = pop(&stack);
            if (!is_matching_pair(top, ch)) return 0;
        }
    }

    return is_empty(&stack);
}

int main() {
    char input[MAX_LEN];

    printf("괄호 문자열을 입력하세요: ");
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, "\n")] = '\0'; // 개행 제거

    if (is_valid_brackets(input)) {
        printf("올바른 괄호입니다.\n");
    }
    else {
        printf("올바르지 않은 괄호입니다.\n");
    }

    return 0;
}
